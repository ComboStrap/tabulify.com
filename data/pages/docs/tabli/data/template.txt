====== Tabli - Data Template command ======


===== template =====
''tabli data template'' is a [[docs:tabli:command|command]] from the [[start|data operations module]] that supports the [[docs:op:template|template operation]] where you creates [[docs:resource:resource|data resource]] from [[docs:templating:template|template]].

===== Howto =====
<related pattern="howto:*" />

===== Syntax =====

<unit>
<code bash>
tabli data template --help
</code>
<console>
Tabli data template
===================

Create data resources from a template and the values of the source data resource.



Syntax
------


    tabli data template [options|flags] <source-selector> <target-data-uri>


where:


  Arguments:

    <source-selector>                                       A data selector that select the data resources to transfer

    <target-data-uri>                                       A target data URI that defines the destination (Example: [table]@connection). If the target data uri has no name, the name will be the name of the source.


  Data Definition Options:

    -a,--attribute <attributeName=value>                    Set specific data resource attributes

    -sa,--source-attribute <attributeName=value>            Set a source data resource attribute

    -ta,--target-attribute <attributeName=value>            Set a target data resource attribute


  Cross Data Transfer Options:

    -bs,--buffer-size <bufferSize>                          defines the size of the memory buffer between the source and target threads

    -mdu,--metrics-data-uri <metricsDataUri>                defines a target data uri where the data metrics should be exported

    -sfs,--source-fetch-size <fetchSize>                    defines the size of the network message from the source to fetch the data

    -so,--source-operation <sourceDataOperation>            defines the data operation (drop or truncate) on the source after transfer. Note: A `move` operation will drop the source.

    -tbs,--target-batch-size <batchSize>                    defines the batch size against the target data resource

    -tcf,--target-commit-frequency <commitFrequency>        defines the commit frequency in number of batches against the target data resource

    -to,--target-operation <targetDataOperation>            defines the data operations (replace, truncate) on the existing target before transfer.

    -tw,--target-worker <targetWorkerCount>                 defines the target number of thread against the target connection

    -op,--transfer-operation <transferOperation>            defines the transfer operation (insert, update, delete, upsert, merge, move, copy). Default to `copy` for a file system and `insert` for a database.

    -wbv,--with-bind-variables                              defines if bind variables are used in the SQL statement


  Template Options:

    -te,--template-engine <templateEngine>                  Set the template engine

    -ts,--template-selector <pattern@connection>            Set a template data selector


  Selection Options:

    -wd,--with-dependencies                                 If set, the dependencies will be also selected


  Global Options:

    -cf,--conf <path>                                       The path to a configuration file

    -cv,--connection-vault <path>                           The path where the connection vault is located

    -h,--help                                               Print this help

    -l,--log-level <error|warning|tip|info|fine>            Set the log level

    -odu,--output-data-uri <outputDataUri>                  defines the output data uri for the feedback data (default: console)

    -oo,--output-operation <dataOperation>                  defines the data operations (replace, truncate) on an existing output resource before transfer.

    -oop,--output-transfer-operation <transferOperation>    defines the output transfer operation (insert, update, merge, copy). Default to `copy` for a file system and `insert` for a database.

    -pp,--passphrase <passphrase>                           A passphrase (master password) to decrypt the encrypted values

    -ph,--project-home <dataUri>                            A data uri to the project directory (ie a path)
</console>
</unit>
